use fmt;
use os;
use io;
use crypto::x25519;
use crypto::random;

export fn main() void = {
	// These keys are taken from https://datatracker.ietf.org/doc/html/rfc7748#section-6.1
	let shared_x: [32]u8 = [0...];
	let shared_y: [32]u8 = [0...];
	let priv1: [32]u8 = [0x77, 0x07, 0x6d, 0x0a, 0x73, 0x18, 0xa5, 0x7d, 0x3c, 0x16, 0xc1, 0x72, 0x51, 0xb2, 0x66, 0x45, 0xdf, 0x4c, 0x2f, 0x87, 0xeb, 0xc0, 0x99, 0x2a, 0xb1, 0x77, 0xfb, 0xa5, 0x1d, 0xb9, 0x2c, 0x2a];
	let pub1: [32]u8 = [0...];
	let priv2: [32]u8 = [0x5d, 0xab, 0x08, 0x7e, 0x62, 0x4a, 0x8a, 0x4b, 0x79, 0xe1, 0x7f, 0x8b, 0x83, 0x80, 0x0e, 0xe6, 0x6f, 0x3b, 0xb1, 0x29, 0x26, 0x18, 0xb6, 0xfd, 0x1c, 0x2f, 0x8b, 0x27, 0xff, 0x88, 0xe0, 0xeb];
	let pub2: [32]u8 = [0...];
	let seed: [32]u8 = [0...];
	random::buffer(seed);
	// fmt::print("\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0")!;
	io::write(os::stdout, seed)!;
	// x25519::newkey(priv1, seed);
	x25519::pubkey(pub1, priv1);
	random::buffer(seed);
	fmt::print("\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0")!;
	io::write(os::stdout, seed)!;
	// x25519::newkey(priv2, seed);
	x25519::pubkey(pub2, priv2);
	x25519::derive(shared_x, priv1, pub2);
	x25519::derive(shared_y, priv2, pub1);
	fmt::print("\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0")!;
	io::write(os::stdout, shared_x)!;
	fmt::print("\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0")!;
	io::write(os::stdout, shared_y)!;
};

